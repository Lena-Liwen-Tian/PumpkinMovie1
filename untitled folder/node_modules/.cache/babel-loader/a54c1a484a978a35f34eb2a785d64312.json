{"ast":null,"code":"var _jsxFileName = \"/Users/liwentian/Desktop/EE461L/PumpkinMovie1/FRONTEND 2/src/user/pages/Auth.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [Error, setError] = useState();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const {\n    isLoading,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    setError([]);\n\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined,\n        image: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        },\n        image: {\n          value: null,\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest('https://pumpkinphasethree.herokuapp.com/api/users/login', 'POST', JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {\n        setError(err.message);\n      }\n    } else {\n      try {\n        setError([]);\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest('https://pumpkinphasethree.herokuapp.com/api/users/signup', 'POST', formData);\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const updateError = () => {\n      setError(Error);\n    };\n\n    updateError();\n  }, [Error]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"authentication\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, isLoading && React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, !isLoginMode && React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), !isLoginMode && React.createElement(ImageUpload, {\n    center: true,\n    id: \"image\",\n    onInput: inputHandler,\n    errorText: \"Please provide an image.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6)],\n    errorText: \"Please enter a valid password, at least 6 characters.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, Error), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, isLoginMode ? 'LOGIN' : 'SIGNUP')), React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN')));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/liwentian/Desktop/EE461L/PumpkinMovie1/FRONTEND 2/src/user/pages/Auth.js"],"names":["React","useState","useContext","useEffect","Card","Input","Button","LoadingSpinner","ImageUpload","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","useHttpClient","AuthContext","Auth","auth","Error","setError","isLoginMode","setIsLoginMode","isLoading","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","image","prevMode","authSubmitHandler","event","preventDefault","responseData","JSON","stringify","login","userId","token","err","message","formData","FormData","append","updateError"],"mappings":"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","sourcesContent":["import React, { useState, useContext,useEffect } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [Error, setError] = useState();\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, sendRequest, clearError } = useHttpClient();\n  \n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    setError([])\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        \n        const responseData = await sendRequest(\n          'https://pumpkinphasethree.herokuapp.com/api/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {\n        setError(err.message)\n      }\n    } else {\n      try {\n        setError([]);\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n          'https://pumpkinphasethree.herokuapp.com/api/users/signup',\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {\n        setError(err.message)\n      }\n    }\n  };\n  useEffect(()=>{\n    const updateError=()=>{\n    setError(Error)\n  };\n  updateError()},[Error])\n\n  return (\n    <React.Fragment>\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <p>{Error}</p>\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n         <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}