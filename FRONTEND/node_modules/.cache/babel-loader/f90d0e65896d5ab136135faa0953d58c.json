{"ast":null,"code":"var _jsxFileName = \"/Users/liwentian/Downloads/PumpkinMovie1/FRONTEND/src/places/pages/UserPlaces.js\";\nimport PlaceList from '../components/PlaceList';\nimport React, { useEffect, useState } from 'react';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport PaginationPage from '../../shared/components/UIElements/pagination';\nimport Sortbutton from '../../shared/components/UIElements/Sort';\nimport Searchbutton from '../../shared/components/UIElements/Search';\nimport Filterbutton from '../../shared/components/UIElements/Filter';\n\nconst UserPlaces = () => {\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [LoadedTheatres, setLoadedTheatres] = useState([]);\n  const [currentPage, setcurrentPage] = useState(1);\n  const postsPerPage = 20;\n  const [currentPosts, setcurrentPosts] = useState([]);\n  const [Sort, setSort] = useState(\"\");\n  const [Filter, setFilter] = useState(\"\");\n  const [Search, setSearch] = useState(\"\");\n  const [originaltheatres, setoriginaltheatres] = useState([]);\n\n  function toLower(a) {\n    return a.cinema_name.toLowerCase();\n  }\n\n  function standard(character) {\n    return character.replace(/\\s/g, '').toLowerCase();\n  }\n\n  useEffect(() => {\n    const fetchTheatres = async () => {\n      try {\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + `/theatres`);\n        setoriginaltheatres(responseData.cinemas);\n        setLoadedTheatres(responseData.cinemas);\n      } catch (err) {}\n    };\n\n    fetchTheatres();\n  }, []);\n  const indexOfLastPosts = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPosts - postsPerPage;\n\n  const paginate = pageNumber => setcurrentPage(pageNumber);\n\n  const sortby = method => {\n    let theatres;\n\n    if (method === \"Name (A-Z)\") {\n      theatres = LoadedTheatres.sort((a, b) => {\n        setSort(method);\n        if (tolower(a) < tolower(b)) return -1;\n        if (tolower(a) > tolower(b)) return 1;\n        return 0;\n      });\n    } else if (method === \"Distance (nearby)\") {\n      setSort(method);\n      theatres = LoadedTheatres.sort((a, b) => {\n        return a.distance - b.distance;\n      });\n    }\n\n    setLoadedTheatres(theatres);\n  };\n\n  const searchtheatre = e => {\n    let title;\n    let postcode;\n    setSearch(e);\n    title = originaltheatres.filter(contact => {\n      return contact.cinema_name.toLowerCase().split(' ').join('').indexOf(e.toLowerCase().split(' ').join('')) !== -1;\n    });\n    postcode = originaltheatres.filter(contact => {\n      return contact.postcode.toString().indexOf(e) !== -1;\n    });\n    setLoadedTheatres(postcode.length > 0 ? postcode : title);\n  };\n\n  const elements = {\n    \"Distance\": {\n      \"Distance\": [\"within 20 miles\", \"20 - 50 miles\", \"beyond 50 miles\", \"All\"]\n    }\n  };\n\n  const changeFilter = (k, v) => {\n    let theatres;\n    let valuearr = v.split(\" \");\n\n    if (k === \"Distance\") {\n      setFilter(\"Distance\");\n      let value = valuearr[valuearr.length - 2];\n      console.log(value);\n\n      if (valuearr[0] === \"All\") {\n        theatres = originaltheatres;\n      } else if (valuearr[0] === \"within\") {\n        theatres = originaltheatres.filter(contact => contact.distance < parseInt(value, 10));\n      } else if (valuearr[0] === \"20\") {\n        theatres = originaltheatres.filter(contact => contact.distance >= 20 && contact.distance < 50);\n      } else {\n        theatres = originaltheatres.filter(contact => contact.distance >= 50);\n      }\n    } else if (k === \"Clean Filter\") {\n      setFilter(\"Clean\");\n      theatres = originaltheatres;\n    }\n\n    setLoadedTheatres(theatres);\n  };\n\n  useEffect(() => {\n    const updatePosts = () => {\n      setcurrentPosts(LoadedTheatres.slice(indexOfFirstPost, indexOfLastPosts));\n    };\n\n    updatePosts();\n  }, [LoadedTheatres, currentPage, Sort, Filter, Search]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Sortbutton, {\n    className: \"sortbutton\",\n    items: [\"Name (A-Z)\", \"Distance (nearby)\"],\n    sortby: sortby,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    className: \"tablecontent2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Searchbutton, {\n    placeholder: \"Search by cinema name or zipcode\",\n    change: searchtheatre,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    className: \"tablecontent3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Filterbutton, {\n    title: \"Distance\",\n    elements: elements.Distance,\n    filterby: changeFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    className: \"tablecontent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(PaginationPage, {\n    className: \"page\",\n    postsPerPage: postsPerPage,\n    currentpage: currentPage,\n    totalPosts: LoadedTheatres.length,\n    paginate: paginate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })))), !isLoading && LoadedTheatres && React.createElement(PlaceList, {\n    items: currentPosts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }));\n};\n\nexport default UserPlaces;","map":{"version":3,"sources":["/Users/liwentian/Downloads/PumpkinMovie1/FRONTEND/src/places/pages/UserPlaces.js"],"names":["PlaceList","React","useEffect","useState","useHttpClient","PaginationPage","Sortbutton","Searchbutton","Filterbutton","UserPlaces","isLoading","error","sendRequest","clearError","LoadedTheatres","setLoadedTheatres","currentPage","setcurrentPage","postsPerPage","currentPosts","setcurrentPosts","Sort","setSort","Filter","setFilter","Search","setSearch","originaltheatres","setoriginaltheatres","toLower","a","cinema_name","toLowerCase","standard","character","replace","fetchTheatres","responseData","process","env","REACT_APP_BACKEND_URL","cinemas","err","indexOfLastPosts","indexOfFirstPost","paginate","pageNumber","sortby","method","theatres","sort","b","tolower","distance","searchtheatre","e","title","postcode","filter","contact","split","join","indexOf","toString","length","elements","changeFilter","k","v","valuearr","value","console","log","parseInt","updatePosts","slice","Distance"],"mappings":"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","sourcesContent":["import PlaceList from '../components/PlaceList';\nimport React, { useEffect,useState } from 'react';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport PaginationPage from '../../shared/components/UIElements/pagination';\nimport Sortbutton from '../../shared/components/UIElements/Sort';\nimport Searchbutton from '../../shared/components/UIElements/Search';\nimport Filterbutton from '../../shared/components/UIElements/Filter';\n\nconst UserPlaces = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const[LoadedTheatres,setLoadedTheatres] = useState([]);\n  const[currentPage,setcurrentPage] = useState(1);\n  const postsPerPage = 20;\n  const [currentPosts,setcurrentPosts] = useState([]);\n  const [Sort,setSort] = useState(\"\");\n  const[Filter,setFilter] = useState(\"\");\n  const[Search,setSearch] = useState(\"\");\n  const[originaltheatres,setoriginaltheatres]=useState([]);\n  \n  function toLower(a){\n    return a.cinema_name.toLowerCase();\n  }\n  function standard(character){\n    return character.replace(/\\s/g,'').toLowerCase();\n\n  }\n\n  useEffect(()=>{\n\n    const fetchTheatres = async()=>{\n      try{          \n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + `/theatres`);\n        setoriginaltheatres(responseData.cinemas)\n        setLoadedTheatres(responseData.cinemas);\n      } catch (err) {\n      }\n    };\n\n    fetchTheatres();\n  },[]);\n\n  const indexOfLastPosts = currentPage * postsPerPage;\n   const indexOfFirstPost = indexOfLastPosts - postsPerPage;\n   const paginate = pageNumber => setcurrentPage(pageNumber);\n\n   const sortby = method => {\n    let theatres;\n    if(method === \"Name (A-Z)\"){\n       theatres = LoadedTheatres.sort((a,b)=>{\n       setSort(method);\n       if(tolower(a) < tolower(b)) return -1;\n       if(tolower(a) > tolower(b)) return 1;\n       return 0;\n     })\n    }else if(method === \"Distance (nearby)\"){\n      setSort(method);\n      theatres = LoadedTheatres.sort((a,b)=>{\n      return a.distance - b.distance;\n     })\n    }\n    setLoadedTheatres(theatres);\n  }\n\n const searchtheatre = e =>{ \n\n   let title;\n   let postcode;\n   setSearch(e);\n   title = originaltheatres.filter((contact) => {\n    return contact.cinema_name.toLowerCase().split(' ').join('').indexOf(e.toLowerCase().split(' ').join('')) !== -1;\n   });\n   postcode = originaltheatres.filter((contact) => {\n     return contact.postcode.toString().indexOf(e)!==-1;\n   });\n   setLoadedTheatres(postcode.length > 0 ? postcode:title);\n }\n\n const elements = {\n   \"Distance\":{\"Distance\":[\"within 20 miles\",\"20 - 50 miles\",\"beyond 50 miles\",\"All\"]}\n }\n const changeFilter = (k,v) => {\n   let theatres;\n   let valuearr = v.split(\" \");\n  if(k === \"Distance\"){\n    setFilter(\"Distance\");     \n    let value = valuearr[valuearr.length-2];\n    console.log(value);\n    if(valuearr[0]===\"All\") {\n      theatres = originaltheatres;\n   }\n    else if(valuearr[0] === \"within\"){\n      theatres = originaltheatres.filter((contact)=>(contact.distance < parseInt(value,10)));\n    }else if (valuearr[0] === \"20\"){   \n       theatres = originaltheatres.filter((contact)=>(contact.distance >= 20 && contact.distance < 50));\n    }else{\n      theatres = originaltheatres.filter((contact)=>(contact.distance >= 50));\n    }  \n  }else if(k === \"Clean Filter\"){\n    setFilter(\"Clean\");\n    theatres = originaltheatres;\n }\n setLoadedTheatres(theatres);\n}\n\n\n\n  useEffect(()=>{\n    const updatePosts=()=>{\n    setcurrentPosts(LoadedTheatres.slice(indexOfFirstPost,indexOfLastPosts))};\n    updatePosts()},[LoadedTheatres,currentPage,Sort,Filter,Search]);\n\n   \n  \n\n  return(       \n    <React.Fragment>\n      <table className=\"subtitle\">\n   <tr>\n     <td>\n   <Sortbutton className=\"sortbutton\" items={[\"Name (A-Z)\",\"Distance (nearby)\"]} sortby={sortby} />\n   </td>\n     <td className=\"tablecontent2\">\n    <Searchbutton placeholder=\"Search by cinema name or zipcode\" change={searchtheatre}/>\n     </td>\n     <td className=\"tablecontent3\">\n     <Filterbutton title= \"Distance\" elements={elements.Distance} filterby={changeFilter}/>\n     </td>\n     \n   \n   <td className=\"tablecontent\">\n     <PaginationPage className=\"page\" postsPerPage={postsPerPage} currentpage={currentPage} totalPosts={LoadedTheatres.length} paginate={paginate}/>\n     </td>\n     </tr>\n   </table>\n      \n    {!isLoading && LoadedTheatres && <PlaceList items={currentPosts} />}\n     </React.Fragment>)\n  };\n\nexport default UserPlaces;\n"]},"metadata":{},"sourceType":"module"}