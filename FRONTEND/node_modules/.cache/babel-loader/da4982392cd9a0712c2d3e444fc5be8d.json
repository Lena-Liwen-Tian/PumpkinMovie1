{"ast":null,"code":"var _jsxFileName = \"/Users/liwentian/Downloads/PumpkinMovie1/FRONTEND/src/showtimes/pages/ShowTime.js\";\nimport React, { useEffect, useState } from 'react';\nimport ShowTimeList from '../components/ShowTimeList';\nimport { useParams } from 'react-router-dom';\nimport Calendar from '../components/calendar';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport axios from 'axios';\nimport Sortbutton from '../../shared/components/UIElements/Sort';\nimport Searchbutton from '../../shared/components/UIElements/Search';\nimport Filterbutton from '../../shared/components/UIElements/Filter';\nimport './Showtime.css';\n\nconst ShowTime = props => {\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const timeid = useParams().timeid;\n  const [LoadedShowtimes, setLoadedShowtimes] = useState();\n  const [Sort, setSort] = useState(\"\");\n  const [Filter, setFilter] = useState(\"\");\n  const [Search, setSearch] = useState(\"\");\n  const [originalmovies, setoriginalmovies] = useState([]);\n  const [filtermovies, setfiltermovies] = useState([]);\n  useEffect(() => {\n    const fetchShowtimes = async () => {\n      try {\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + `/showtimes/${timeid}`);\n        setLoadedShowtimes(responseData.showtimes);\n        setoriginalmovies(responseData.showtimes);\n      } catch (err) {}\n    };\n\n    fetchShowtimes();\n  }, [timeid]);\n\n  const sortby = method => {\n    let movies;\n\n    if (method === \"Title (A-Z)\") {\n      movies = LoadedShowtimes.sort((a, b) => {\n        setSort(method);\n        if (a.title.toLowerCase() < b.title.toLowerCase()) return -1;\n        if (a.title.toLowerCase() > b.title.toLowerCase()) return 1;\n        return 0;\n      });\n    } else if (method === \"Time\") {\n      setSort(method);\n      movies = LoadedShowtimes.sort((a, b) => {\n        return parseInt(a.time.split(\":\")[0]) - parseInt(b.time.split(\":\")[0]);\n      });\n    }\n\n    setLoadedShowtimes(movies);\n  };\n\n  const searchmovie = e => {\n    setSearch(e);\n    let title;\n    let location;\n    title = originalmovies.filter(contact => {\n      return contact.title.replace(/\\s/g, '').toLowerCase().indexOf(e.replace(/\\s/g, '').toLowerCase()) !== -1;\n    });\n    location = originalmovies.filter(contact => {\n      return contact.theatre.name.replace(/\\s/g, '').toLowerCase().split(',').join('').indexOf(e.replace(/\\s/g, '').toLowerCase()) !== -1;\n    });\n    setLoadedShowtimes(title.length > 0 ? title : location);\n  };\n\n  const elements = {\n    \"Time\": {\n      \"Time\": [\"Morning\", \"Afternoon\", \"Evening\", \"All\"]\n    }\n  };\n\n  const changeFilter = (k, v) => {\n    let movies;\n    let valuearr = v.split(\" \");\n\n    if (k === \"Time\") {\n      setFilter(\"Time\");\n      let value = valuearr[valuearr.length - 1];\n\n      if (valuearr[0] === \"All\") {\n        movies = originalmovies;\n      } else if (valuearr[0] === \"Morning\") {\n        movies = originalmovies.filter(contact => parseInt(contact.time.split(\":\")[0]) < 12);\n      } else if (valuearr[0] === \"Afternoon\") {\n        movies = originalmovies.filter(contact => parseInt(contact.time.split(\":\")[0]) <= 18 && parseInt(contact.time.split(\":\")[0]) > 12);\n      } else if (valuearr[0] === \"Evening\") {\n        movies = originalmovies.filter(contact => parseInt(contact.time.split(\":\")[0]) > 18);\n      }\n    }\n\n    setLoadedShowtimes(movies);\n  };\n\n  useEffect(() => {\n    const updatePosts = () => {\n      setLoadedShowtimes(LoadedShowtimes);\n    };\n\n    updatePosts();\n  }, [LoadedShowtimes, Sort, Filter, Search]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"showtimesubtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Sortbutton, {\n    className: \"sortbutton\",\n    items: [\"Title (A-Z)\", \"Time\"],\n    sortby: sortby,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    className: \"tablecontent2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Searchbutton, {\n    placeholder: \"Search by movie title or theatre name\",\n    change: searchmovie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    className: \"tablecontent3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Filterbutton, {\n    title: \"Time\",\n    elements: elements.Time,\n    filterby: changeFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })))), React.createElement(Calendar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), !isLoading && LoadedShowtimes && React.createElement(ShowTimeList, {\n    items: LoadedShowtimes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }));\n};\n\nexport default ShowTime;","map":{"version":3,"sources":["/Users/liwentian/Downloads/PumpkinMovie1/FRONTEND/src/showtimes/pages/ShowTime.js"],"names":["React","useEffect","useState","ShowTimeList","useParams","Calendar","useHttpClient","axios","Sortbutton","Searchbutton","Filterbutton","ShowTime","props","isLoading","error","sendRequest","clearError","timeid","LoadedShowtimes","setLoadedShowtimes","Sort","setSort","Filter","setFilter","Search","setSearch","originalmovies","setoriginalmovies","filtermovies","setfiltermovies","fetchShowtimes","responseData","process","env","REACT_APP_BACKEND_URL","showtimes","err","sortby","method","movies","sort","a","b","title","toLowerCase","parseInt","time","split","searchmovie","e","location","filter","contact","replace","indexOf","theatre","name","join","length","elements","changeFilter","k","v","valuearr","value","updatePosts","Time"],"mappings":"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","sourcesContent":["import React, { useEffect,useState } from 'react';\nimport ShowTimeList from '../components/ShowTimeList';\nimport { useParams } from 'react-router-dom';\nimport Calendar from '../components/calendar';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport axios from 'axios';\nimport Sortbutton from '../../shared/components/UIElements/Sort';\nimport Searchbutton from '../../shared/components/UIElements/Search';\nimport Filterbutton from '../../shared/components/UIElements/Filter';\n\nimport './Showtime.css';\n    const ShowTime = props => {\n      const { isLoading, error, sendRequest, clearError } = useHttpClient();\n      const timeid = useParams().timeid;\n      const [LoadedShowtimes, setLoadedShowtimes] = useState();\n  \n  const [Sort,setSort] = useState(\"\");\n  const[Filter,setFilter] = useState(\"\");\n  const[Search,setSearch] = useState(\"\");\n  const[originalmovies,setoriginalmovies]=useState([]);\n  const[filtermovies,setfiltermovies] = useState([]);\n\n\n\n      useEffect(() => {\n        \n         const fetchShowtimes = async () => {\n          try{                  \n            const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + `/showtimes/${timeid}`);\n            setLoadedShowtimes(responseData.showtimes);\n            setoriginalmovies(responseData.showtimes)          \n          } catch (err) {          \n          }\n        };\n\n        fetchShowtimes();\n      },[timeid]);\n      \n      const sortby = method => {\n        let movies;\n        if(method === \"Title (A-Z)\"){\n           movies =  LoadedShowtimes.sort((a,b)=>{\n           setSort(method);\n           if(a.title.toLowerCase() < b.title.toLowerCase()) return -1;\n           if(a.title.toLowerCase() > b.title.toLowerCase()) return 1;\n           return 0;\n         })\n        }else if(method === \"Time\"){\n          setSort(method);\n          movies =  LoadedShowtimes.sort((a,b)=>{\n          return parseInt(a.time.split(\":\")[0]) - parseInt(b.time.split(\":\")[0]);\n         })\n        }\n        setLoadedShowtimes(movies);\n        \n      }\n   \n     const searchmovie = e =>{ \n       \n       setSearch(e);\n       let title;\n       let location;\n       title = originalmovies.filter((contact) =>{\n         return contact.title.replace(/\\s/g,'').toLowerCase().indexOf(e.replace(/\\s/g,'').toLowerCase()) !== -1 ;\n       });\n       location = originalmovies.filter((contact) =>{\n       return contact.theatre.name.replace(/\\s/g,'').toLowerCase().split(',').join('').indexOf(e.replace(/\\s/g,'').toLowerCase()) !== -1 ;\n      });\n      setLoadedShowtimes(title.length > 0 ? title:location);\n     }\n     const elements = {\n       \"Time\":{\"Time\":[\"Morning\",\"Afternoon\",\"Evening\",\"All\"]},\n     }\n     const changeFilter = (k,v) => {\n       let movies;\n       let valuearr = v.split(\" \");\n      if(k === \"Time\"){\n        setFilter(\"Time\");     \n        let value = valuearr[valuearr.length-1];\n        if(valuearr[0]===\"All\") {\n         movies = originalmovies;\n       }\n        else if(valuearr[0] === \"Morning\"){\n           movies = originalmovies.filter((contact)=>parseInt(contact.time.split(\":\")[0]) < 12);\n        }else if(valuearr[0] === \"Afternoon\"){   \n           movies = originalmovies.filter((contact)=>parseInt(contact.time.split(\":\")[0]) <= 18 && parseInt(contact.time.split(\":\")[0]) > 12);\n        }else if(valuearr[0] === \"Evening\"){\n          movies = originalmovies.filter((contact)=>parseInt(contact.time.split(\":\")[0]) >18);\n       }\n       \n      }\n      setLoadedShowtimes(movies);\n   }\n       \n   useEffect(()=>{\n    const updatePosts=()=>{ \n    setLoadedShowtimes(LoadedShowtimes)};\n    updatePosts()},[LoadedShowtimes,Sort,Filter,Search]);\n      return (        \n      <React.Fragment>\n        <table className=\"showtimesubtitle\">\n      <tr>\n        <td>\n      <Sortbutton className=\"sortbutton\" items={[\"Title (A-Z)\",\"Time\"]} sortby={sortby} />\n      </td>  \n        <td className=\"tablecontent2\">\n       <Searchbutton placeholder = \"Search by movie title or theatre name\" change={searchmovie}/>\n        </td>\n        <td className=\"tablecontent3\">\n        <Filterbutton title= \"Time\" elements={elements.Time} filterby={changeFilter}/>\n        </td>\n        </tr>\n      </table>\n      <Calendar />\n      {!isLoading && LoadedShowtimes&&<ShowTimeList items={LoadedShowtimes}/>}\n      </React.Fragment>);\n};\n\n\n\nexport default ShowTime;"]},"metadata":{},"sourceType":"module"}