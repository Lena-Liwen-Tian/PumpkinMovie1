{"ast":null,"code":"var _jsxFileName = \"/Users/liwentian/Downloads/PumpkinMovie1/FRONTEND/src/showtimes/components/calendar.js\";\nimport React, { useEffect } from 'react';\nimport { addWeeks, subWeeks, startOfWeek, addDays, format, isSameDay, endOfWeek } from 'date-fns';\nimport './calendar.css';\nimport { Link } from 'react-router-dom';\n\nclass Calendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.newDate = new Date(\"2020-03-23\");\n    this.state = {\n      currentWeek: this.newDate,\n      currentMonth: this.newDate,\n      selectedDate: this.newDate,\n      currentYear: this.newDate.getFullYear(),\n      check: false\n    };\n\n    this.nextMonth = () => {\n      this.setState({\n        currentWeek: addWeeks(this.state.currentWeek, 1),\n        currentMonth: addWeeks(endOfWeek(this.state.currentWeek), 1)\n      });\n    };\n\n    this.prevMonth = () => {\n      this.setState({\n        currentWeek: subWeeks(this.state.currentWeek, 1),\n        currentMonth: subWeeks(endOfWeek(this.state.currentWeek), 1)\n      });\n    };\n  }\n\n  renderDays() {\n    const DAYS = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n    let days = [];\n\n    for (let i = 0; i < 7; i++) {\n      days.push(React.createElement(\"div\", {\n        className: \"col col-center\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, DAYS[i]));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"days row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, days);\n  }\n\n  renderCells() {\n    const {\n      currentWeek\n    } = this.state;\n    const startDate = startOfWeek(currentWeek);\n    const endDate = endOfWeek(currentWeek);\n    const dateFormat = \"d\";\n    const rows = [];\n    let days = [];\n    let day = startDate;\n    let formattedDate = \"\";\n\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        formattedDate = format(day, dateFormat);\n        let sameday = isSameDay(day, this.state.selectedDate) ? \"selected\" : \"\";\n        let showtime = addDays(startDate, i);\n        let m = showtime.getMonth() + 1;\n        let month = showtime.getMonth() + 1 >= 10 ? \"\" : \"0\";\n        let showtimesId = showtime.getFullYear() + \"-\" + month + m + \"-\" + showtime.getDate();\n        days.push(React.createElement(\"div\", {\n          className: `col cell ${sameday}`,\n          key: day,\n          id: day,\n          onClick: () => this.setState({\n            selectedDate: addDays(startDate, i)\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(Link, {\n          className: \"link\",\n          to: `/showtime/${showtimesId}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"number\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, formattedDate), React.createElement(\"span\", {\n          className: \"bg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, formattedDate))));\n        day = addDays(day, 1);\n      }\n\n      rows.push(React.createElement(\"div\", {\n        className: \"row\",\n        key: day,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, days));\n      days = [];\n    }\n\n    return React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, rows);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"calendarheader\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), this.renderDays(), this.renderCells());\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/liwentian/Downloads/PumpkinMovie1/FRONTEND/src/showtimes/components/calendar.js"],"names":["React","useEffect","addWeeks","subWeeks","startOfWeek","addDays","format","isSameDay","endOfWeek","Link","Calendar","Component","newDate","Date","state","currentWeek","currentMonth","selectedDate","currentYear","getFullYear","check","nextMonth","setState","prevMonth","renderDays","DAYS","days","i","push","renderCells","startDate","endDate","dateFormat","rows","day","formattedDate","sameday","showtime","m","getMonth","month","showtimesId","getDate","render"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {addWeeks,subWeeks,startOfWeek,addDays,format,isSameDay,endOfWeek} from 'date-fns';\nimport './calendar.css';\nimport { Link } from 'react-router-dom';\n\nclass Calendar extends React.Component {\n newDate = new Date(\"2020-03-23\");\n\n  state = {\n    currentWeek: this.newDate,\n    currentMonth: this.newDate,\n    selectedDate: this.newDate,\n    currentYear:this.newDate.getFullYear(),\n    check:false\n  };\n\n\n  renderDays() {\n    \n    const DAYS = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"];\n\n    let days=[];\n    for (let i = 0; i < 7; i++) {\n      days.push(\n        <div className=\"col col-center\" key={i}>\n          {DAYS[i]}\n        </div>\n      );\n    }\n\n    return <div className=\"days row\">{days}</div>;\n  }\n\n  renderCells() {\n    const { currentWeek} = this.state;\n  \n    const startDate = startOfWeek(currentWeek);\n    const endDate = endOfWeek(currentWeek);\n\n    const dateFormat = \"d\";\n    const rows = [];\n\n    let days = [];\n    let day = startDate;\n    let formattedDate = \"\";\n    \n    while (day <= endDate) {\n       \n      for (let i = 0; i < 7; i++) {\n        formattedDate = format(day, dateFormat);\n        let sameday = isSameDay(day, this.state.selectedDate)? \"selected\" : \"\";\n        let showtime = addDays(startDate,i);       \n         let m = showtime.getMonth()+1;\n         let month = showtime.getMonth()+1>=10? \"\":\"0\";\n         let showtimesId = showtime.getFullYear() + \"-\" + month + m +\"-\"+ showtime.getDate(); \n        days.push(\n          \n          <div         \n            className={`col cell ${sameday}` } \n            key={day} id={day} onClick={() => this.setState({selectedDate:addDays(startDate, i)})}\n            >\n            <Link className =\"link\" to={`/showtime/${showtimesId}`}>\n            <span className=\"number\">{formattedDate}</span>\n            <span className=\"bg\">{formattedDate}</span>\n            </Link>\n          </div>\n         \n        );\n        day = addDays(day, 1);\n      }\n      rows.push(\n        <div className=\"row\" key={day} >\n          {days}\n        </div>\n      );\n      days = [];\n    }\n    return <div className=\"body\">{rows}</div>;\n  }\n\n  nextMonth = () => {\n     this.setState({\n     currentWeek: addWeeks(this.state.currentWeek,1),\n     currentMonth:addWeeks(endOfWeek(this.state.currentWeek),1)\n    });\n    \n  };\n\n  prevMonth = () => {\n    this.setState({\n      currentWeek: subWeeks(this.state.currentWeek,1),\n      currentMonth:subWeeks(endOfWeek(this.state.currentWeek),1)\n    });\n   \n  };\n\n  render() {\n    return (\n      <div className=\"calendar\">\n        <calendarheader />\n        {this.renderDays()}\n        {this.renderCells()}\n      </div>\n    );\n  }\n}\n\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}