{"ast":null,"code":"var _jsxFileName = \"/Users/liwentian/Downloads/PumpkinMovie1/FRONTEND/src/places/components/Singleplace.js\";\nimport { useParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport SingleplaceItem from './SingleplaceItem';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport ShowTimeList from '../../showtimes/components/ShowTimeList';\n\nconst Singleplace = props => {\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const theaterId = useParams().theaterId;\n  const [LoadedTheatre, setLoadedTheatre] = useState();\n  const [LoadedMovies, setLoadedMovies] = useState([]);\n  const [have, sethave] = useState(true);\n  useEffect(() => {\n    const fetchTheatre = async () => {\n      setisLoading(true);\n\n      try {\n        const response = await fetch(`https://pumpkinphasethree.herokuapp.com/${theaterId}`);\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        if (responseData.movies.length === 0) {\n          sethave(false);\n        }\n\n        setLoadedTheatre(responseData.cinema);\n        setLoadedMovies(responseData.movies);\n      } catch (err) {\n        setError(err.message);\n      }\n\n      setisLoading(false);\n    };\n\n    fetchTheatre();\n  }, [theaterId]);\n\n  const errorHandler = () => {\n    setError = null;\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, isLoading && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), !isLoading && LoadedTheatre && React.createElement(SingleplaceItem, {\n    name: LoadedTheatre.cinema_name,\n    cinemaid: LoadedTheatre.cinema_id,\n    image: LoadedTheatre.image,\n    address: LoadedTheatre.address,\n    phone: LoadedTheatre.phone,\n    lat: LoadedTheatre.lat,\n    lng: LoadedTheatre.lng,\n    movies: LoadedMovies,\n    imdbID: LoadedMovies.imdbID,\n    have: have,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), !isLoading && LoadedTheatre && React.createElement(ShowTimeList, {\n    items: LoadedMovies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};\n\nexport default Singleplace;","map":{"version":3,"sources":["/Users/liwentian/Downloads/PumpkinMovie1/FRONTEND/src/places/components/Singleplace.js"],"names":["useParams","React","useState","useEffect","SingleplaceItem","useHttpClient","LoadingSpinner","Button","Card","ShowTimeList","Singleplace","props","isLoading","error","sendRequest","clearError","theaterId","LoadedTheatre","setLoadedTheatre","LoadedMovies","setLoadedMovies","have","sethave","fetchTheatre","setisLoading","response","fetch","responseData","json","ok","Error","message","movies","length","cinema","err","setError","errorHandler","cinema_name","cinema_id","image","address","phone","lat","lng","imdbID"],"mappings":"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","sourcesContent":["import { useParams } from 'react-router-dom';\nimport React,{useState,useEffect} from 'react';\nimport SingleplaceItem from './SingleplaceItem';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport ShowTimeList from '../../showtimes/components/ShowTimeList';\nconst Singleplace = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const theaterId = useParams().theaterId;\n  const [LoadedTheatre, setLoadedTheatre] = useState();\n  const [LoadedMovies,setLoadedMovies] = useState([]);\n\nconst[have,sethave] = useState(true);\n    useEffect(() => {\n       const fetchTheatre = async () => {\n        setisLoading(true);\n        try{          \n          const response= await fetch(`https://pumpkinphasethree.herokuapp.com/${theaterId}`); \n          const responseData = await response.json();\n          \n          if(!response.ok){\n            throw new Error(responseData.message);\n          }\n          if(responseData.movies.length === 0) {\n            sethave(false);\n        }\n          setLoadedTheatre(responseData.cinema);\n          setLoadedMovies(responseData.movies);\n          \n        } catch (err) {\n          setError(err.message);\n        }\n        setisLoading(false);\n       \n      \n      };\n  \n      fetchTheatre();\n   \n    },[theaterId]);\n    const errorHandler = () =>{\n      setError=(null);\n    }\n   \n    return (\n      <React.Fragment>\n      {isLoading && (<div><LoadingSpinner /></div>)}\n      {!isLoading && LoadedTheatre && <SingleplaceItem\n  name = {LoadedTheatre.cinema_name}\n  cinemaid = {LoadedTheatre.cinema_id}\n  image={LoadedTheatre.image}\n  address = {LoadedTheatre.address}\n  phone = {LoadedTheatre.phone}\n  lat = {LoadedTheatre.lat}\n  lng = {LoadedTheatre.lng}\n  movies = {LoadedMovies}\n  imdbID = {LoadedMovies.imdbID}\n  have = {have}/>}\n  {!isLoading && LoadedTheatre &&<ShowTimeList items = {LoadedMovies}/>}\n      </React.Fragment>)\n  \n  };\n\n\nexport default Singleplace;"]},"metadata":{},"sourceType":"module"}