{"ast":null,"code":"var _jsxFileName = \"/Users/liwentian/Downloads/PumpkinMovie1/FRONTEND/src/movies/pages/Description.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useParams } from 'react-router-dom';\nimport MovieDescription from './MovieDescription';\nimport ShowTimeList from '../../showtimes/components/ShowTimeList';\n\nconst Description = props => {\n  let movieid = useParams().movieId;\n  const [LoadedDes, setLoadedDes] = useState();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [Loadedshowtimes, setLoadedshowtimes] = useState();\n  useEffect(() => {\n    const fetchDes = async () => {\n      try {\n        const responseData = await sendRequest(`https://pumpkinphasethree.herokuapp.com/api/movies/${movieid}`);\n        setLoadedDes(responseData.movie);\n        setLoadedshowtimes(responseData.showtimes);\n        console.log(responseData.showtimes);\n      } catch (err) {}\n    };\n\n    fetchDes();\n  }, [movieid]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, isLoading && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), !isLoading && LoadedDes && React.createElement(MovieDescription, {\n    des: LoadedDes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), !isLoading && LoadedDes && React.createElement(ShowTimeList, {\n    items: Loadedshowtimes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nexport default Description;","map":{"version":3,"sources":["/Users/liwentian/Downloads/PumpkinMovie1/FRONTEND/src/movies/pages/Description.js"],"names":["React","useState","useEffect","useHttpClient","LoadingSpinner","useParams","MovieDescription","ShowTimeList","Description","props","movieid","movieId","LoadedDes","setLoadedDes","isLoading","error","sendRequest","clearError","Loadedshowtimes","setLoadedshowtimes","fetchDes","responseData","movie","showtimes","console","log","err"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,gBAAP,MAA4B,oBAA5B;AACA,OAAOC,YAAP,MAAyB,yCAAzB;;AAEE,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC7B,MAAIC,OAAO,GAAGL,SAAS,GAAGM,OAA1B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,EAA1C;AACA,QAAM;AAAEa,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA;AAAjC,MAAgDd,aAAa,EAAnE;AACA,QAAM,CAACe,eAAD,EAAiBC,kBAAjB,IAAuClB,QAAQ,EAArD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMkB,QAAQ,GAAG,YAAY;AAC5B,UAAG;AACD,cAAMC,YAAY,GAAG,MAAML,WAAW,CAAE,sDAAqDN,OAAQ,EAA/D,CAAtC;AAEAG,QAAAA,YAAY,CAACQ,YAAY,CAACC,KAAd,CAAZ;AACAH,QAAAA,kBAAkB,CAACE,YAAY,CAACE,SAAd,CAAlB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAY,CAACE,SAAzB;AACD,OAND,CAME,OAAOG,GAAP,EAAY,CACb;AACF,KATA;;AAUDN,IAAAA,QAAQ;AACT,GAZQ,EAYP,CAACV,OAAD,CAZO,CAAT;AAeA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCI,SAAS,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CADf,EAEC,CAACA,SAAD,IAAcF,SAAd,IAA2B,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAIA,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF5B,EAGC,CAACE,SAAD,IAAcF,SAAd,IAA2B,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEM,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH5B,CADF;AAOD,CA5BC;;AAiCF,eAAeV,WAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useParams } from 'react-router-dom';\nimport MovieDescription from'./MovieDescription';\nimport ShowTimeList from '../../showtimes/components/ShowTimeList';\n\n  const Description = props => {\n  let movieid = useParams().movieId;\n  const [LoadedDes, setLoadedDes] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [Loadedshowtimes,setLoadedshowtimes] = useState();\n\n  useEffect(() => {\n     const fetchDes = async () => {\n      try{        \n        const responseData = await sendRequest(`https://pumpkinphasethree.herokuapp.com/api/movies/${movieid}`);\n        \n        setLoadedDes(responseData.movie);\n        setLoadedshowtimes(responseData.showtimes);   \n        console.log(responseData.showtimes);    \n      } catch (err) {       \n      }\n    };\n    fetchDes();\n  },[movieid]);\n\n \n  return (\n    <React.Fragment>\n    {isLoading && (<div><LoadingSpinner /></div>)}\n    {!isLoading && LoadedDes && <MovieDescription des = {LoadedDes}/>}\n    {!isLoading && LoadedDes && <ShowTimeList items={Loadedshowtimes}/>}\n    </React.Fragment>)\n\n};\n\n\n\n\nexport default Description;"]},"metadata":{},"sourceType":"module"}